{"version":3,"sources":["components/About.js","components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Alert","height","concat","alert","role","message","data-bs-dismiss","aria-label","Navbar","react_router_dom","to","title","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","elmt","defaultProps","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","background","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5ccbc593.chunk.js","sourcesContent":["import React from 'react'\r\n//import { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setmyStyle] = useState( {\r\n    //     color : 'black',\r\n    //     backgroundColor : 'white'\r\n    // })\r\n   // const [btntext, setbtntext] = useState(\"Enable Dark Mode\")\r\n\r\n    // const toggleStyle = ()=>\r\n    // {\r\n    //     if(myStyle.color === 'white')\r\n    //     {\r\n    //         setmyStyle({\r\n    //             color : 'black',\r\n    //              backgroundColor : 'white'\r\n    //         })\r\n    //         setbtntext(\"Enable Dark Mode\")\r\n    //     }\r\n    //     else\r\n    //     {\r\n    //         setmyStyle({\r\n    //             color : 'white',\r\n    //              backgroundColor : 'black'\r\n    //         })\r\n    //         setbtntext(\"Enable Light Mode\")\r\n    //     }\r\n    // }\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'light' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? '0c0946' : 'white',\r\n        border : '2px solid',\r\n        borderColor: props.mode === 'dark' ? 'light' : 'black' \r\n    }\r\n    \r\n   \r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <h1 className=\"my-3\" style={{color: props.mode === 'dark' ? 'light' : 'black'}}>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                  <strong>Anaylze Your Text</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                   <strong>Free To Use</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                 <strong>Browser Compatible</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n         </div>\r\n    </div>\r\n    {/* <div className=\"container my-3\">\r\n    <button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary\">{btntext}</button>\r\n    </div> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  \r\n /* const capitalize = (word) => //capital first letter of success word in alert but it gives erroe so put it in comment\r\n  {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }*/\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong> : {props.alert.message} \r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li> \r\n          \r\n          \r\n        </ul>\r\n      { /* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n        </form>*/ }\r\n        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n          {/* <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/> */}\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n           <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n                    }\r\nNavbar.defaultProps = {title: 'set title',\r\n                    aboutText: 'set about us'\r\n}","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n       // console.log(\"Uppercase eas clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to uppercase!\" , \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n       let newText = text.toLowerCase();\r\n       setText(newText)\r\n       props.showAlert(\"converted to lowercase!\" , \"success\");\r\n   }\r\n   const handleClearClick = ()=>{\r\n    let newText = (\"\");\r\n    setText(newText)\r\n  }\r\n  const handleCopy = ()=>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"text is copied to clipboard\" , \"success\");\r\n  }\r\n  const handleExtraSpace = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n  }\r\n\r\n    const handleOnChange = (event)=>{\r\n       // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color : props.mode === 'dark' ? 'white' : '#0c0946'}}>\r\n        <h1 className='mb-4'>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode === 'light' ? 'white' : '#0c0946',color : props.mode === 'dark' ? 'white' : 'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n         <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert To LowerCase</button>\r\n         <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n         <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n         <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpace}>Remove Extra space</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color : props.mode === 'dark' ? 'white' : '#0c0946'}}>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{text.split(\" \").filter((elmt)=>{return elmt.length!==0}).length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").filter((elmt)=>{return elmt.length!==0}).length} Minutes Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:'Nothing to Priview'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n // Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is on or not\n  const [alert, setAlert] = useState('null'); //alert massage\n\n  const showAlert = (message, type)=>\n  {\n      setAlert({\n        message : message,\n        type : type\n      })\n      setTimeout(() => {    //this is for set time for alert to dismiss automatic but here it dismiss my whole site so i put it in comment \n        showAlert(null);\n      }, 3000); \n  }\n\n  const toggleMode = ()=>{\n      if(mode === 'light')\n      {\n          setMode('dark');\n          document.body.style.background = '#0c0946';\n          showAlert(\"Dark Mode Enable\",\"success\");\n        //  document.title = 'TextUtiles - Dark Mode';\n      }\n      else\n      {\n          setMode('light');\n          document.body.style.background = 'white';\n          showAlert(\"Light Mode Enable\",\"success\");\n         // document.title = 'TextUtiles - Light Mode';\n      }\n  }\n\n\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\" aboutText=\"About US\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">  \n      <Switch>    \n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">  \n              <TextForm showAlert={showAlert} heading=\"Try TextUtils - Word counter, Character counter,Remove extra spaces \" mode={mode} />               \n            </Route>\n            </Switch>  \n      </div>\n     </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}